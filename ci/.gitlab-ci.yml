stages:
  - style_check
  - test
  - deploy

default:
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de".insteadOf "ssh://git@gitlab.lrz.de"
    - poetry install --with dev,docs
    - source .venv/bin/activate

.install-and-run: &install-and-run
  - pip install tox coverage
  - coverage run --source ./ -m unittest tests/run_tests.py
  - coverage report -m --omit="*/src/*,*/tests/*" || true

# static_check
static_check:
  stage: style_check
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files --show-diff-on-failure


#test:
#  stage: test
#  image: gitlab.lrz.de:5005/cps/commonroad-carla-interface/carla_image
#  tags :
#    - gpu
#  script:
#    - bash /home/carla/CarlaUE4.sh -RenderOffScreen &> carla.log &
#    - sleep 30
#    - cat carla.log
#    - python3 -m unittest tests/main.py
#    - pkill -f Carla || true

pages:
  stage: deploy
  when: manual
  publish: site
  only :
    - main
  script:
    - mkdocs build
  artifacts:
    paths:
      - site
  environment:
    name: Gitlab Pages
    url: https://cps.pages.gitlab.lrz.de/commonroad/commonroad-carla-interface/

build_pages:
  cache: []
  stage: deploy
  script:
    - mkdocs build
  artifacts:
    paths:
      - site
  needs: []

push_to_internal_pipy_registry:
  stage: deploy
  when: manual
  only:
    - develop
  script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry build
    - poetry publish --repository gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}

push_to_external_pipy_test_registry:
  stage: deploy
  when: manual
  only:
    - main
  script:
    - poetry config repositories.test https://test.pypi.org/legacy/
    - poetry build
    - poetry publish --repository test -u __token__ -p ${CR_PYPI_TEST_API_TOKEN}

push_to_external_pipy_release_registry:
  stage: deploy
  when: manual
  only:
    - main
  script:
    - poetry build
    - poetry publish -u __token__ -p ${CR_PYPI_RELEASE_API_TOKEN}
